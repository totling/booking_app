services:
  db:
    image: postgres:16
    container_name: booking_db
    volumes:
      - postgresdata:/var/lib/postgresql/data
    env_file:
      - .env-non-dev
    ports:
      - "5433:5432"

  redis:
    image: redis:8.0-M02
    container_name: booking_redis

  booking:
    image: booking_image
    container_name: booking_app
    build:
      context: .
    env_file:
      - .env-non-dev
    depends_on:
      - db
      - redis
    command: ["/booking/docker/app.sh"]
    ports:
      - "9000:8000"

  celery:
    image: booking_celery
    build:
      context: .
    container_name: booking_celery
    depends_on:
      - redis
    command: ["/booking/docker/celery.sh", "celery"]
    env_file:
      - .env-non-dev

  flower:
    image: booking_flower
    build:
      context: .
    container_name: booking_flower
    depends_on:
      - redis
    command: ["/booking/docker/celery.sh", "flower"]
    env_file:
      - .env-non-dev

  prometheus:
    image: prom/prometheus:v2.55.1
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheusdata:/prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:11.3.0
    container_name: grafana
    volumes:
      - grafanadata:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3000:3000"

volumes:
  postgresdata:
  grafanadata:
  prometheusdata:
